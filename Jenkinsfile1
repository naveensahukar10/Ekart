pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME= tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/naveensahukar10/Ekart.git'
            }
        }
        
        stage('Code Compile') {
            steps {
                sh "mvn clean compile -DskipTests=true"
            }
        }
        
        stage('Unit Testcases') {
            steps {
                sh "mvn test -DskipTests=true"
            }
        }
        
        stage('OWASP Dependency Check') {
            steps {
                dependencyCheck additionalArguments: ' --scan ./ ', odcInstallation: 'DC'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server'){
                   sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Ekart \
                   -Dsonar.java.binaries=. \
                   -Dsonar.projectKey=Ekart '''
                }   
            }
        }
        
        stage('Maven Build') {
            steps {
                sh "mvn clean package -DskipTests=true"
            }
        }
        
        stage('Docker Build & Tag') {
            steps {
                sh "docker build -t ekart ."
                sh "docker tag ekart naveensahukar/ekart:latest"
            }
        }
        
        stage('Trivy Scan') {
            steps {
                sh "trivy image naveensahukar/ekart:latest"
            }
        }
        
        stage('Docker Image Push to the DockerHub') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'DockerHubCredentials', toolName: 'docker') {
                        sh "docker push naveensahukar/ekart:latest"
                    }
                }
            }
        }
        
        stage('Deploy the Application') {
            steps {
                sh "docker run -d -p 8070:8070 --name ekart-container naveensahukar/ekart:latest"
            }
        }
    }
}
